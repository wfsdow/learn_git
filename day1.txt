


	git init  初始化本地文件夹为仓库
	
	git clone  <url>  clone远程仓库
	
	git add     将修改添加到暂存区
	git commit  提交暂存区到仓库
	
	
	git diff   比较工作区文件和暂存区的区别
	git diff --cached  比较暂存区和仓库的区别
	
	
	git log  查看提交记录。(对应当前版本。版本回退之后，后面的提交日志就看不到了)
	git reflog  查看所有的提交记录。
	git reset --hard 版本号    回退到指定的版本号
	
	
	git check -- <filename>   将文件恢复到仓库的版本。回到最近一次git add或git commit的状态
	git reset HEAD <filename>  将暂存区中的内容改回工作区中的内容
	
	git rm 文件名 删除文件
	
	
	git branch  查看分支
	git checkout -b 分支名   创建并切换分支 
		相当于
		git branch 分支名
		git checkout 分支名
		
	git branch -d 分支名  删除分支
	git merge 分支名      将该分支合并到当前分支
	
	master添加了内容
	分支添加的内容
	
	git remote 	 显示所有的远程仓库
	
	git fetch 远程主机名 分支名   获取远程主机上的分支
	
	git branch -r 查看远程分支
	git branch -a 显示所有分支(包括远程分支)
	
	
	git pull <远程主机名> <远程分支名>:<本地分支名>   取回某个远程分支，与本地分支合并。 
		与当前分支合并时，可以省略<本地分支名>
		
		
	git push <远程主机> <本地分支>:<远程分支>
		省略远程分支名，则将本地分支推送到存在追踪关系的远程分支。
		如果远程分支不存在，则会被创建。
		省略本地分支、远程分支，表示将当前分支推送到远程关联的分支上
		
		
		
	分支的推送写法   <source>:<destination>
	
	pull <远程分支>:<本地分支>
	push <本地分支>:<远程分支>
	
	
	